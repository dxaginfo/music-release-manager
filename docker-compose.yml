version: '3.8'

services:
  # Backend API service
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: music-release-manager-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/music-release-manager
      - REDIS_URI=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-here
      - JWT_EXPIRATION=86400
      - AWS_ACCESS_KEY_ID=your-aws-access-key
      - AWS_SECRET_ACCESS_KEY=your-aws-secret-key
      - AWS_REGION=us-east-1
      - S3_BUCKET=music-release-manager-assets
      - CLIENT_URL=http://localhost:3000
    depends_on:
      - mongo
      - redis
    networks:
      - app-network

  # Frontend client service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: music-release-manager-client
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - app-network

  # MongoDB service
  mongo:
    image: mongo:5
    container_name: music-release-manager-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:7-alpine
    container_name: music-release-manager-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

# Persistent volumes
volumes:
  mongo-data:
  redis-data:

# Network
networks:
  app-network:
    driver: bridge